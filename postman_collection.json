{
  "info": {
    "name": "Flood Relief Auth APIs",
    "description": "Postman collection for authentication APIs in Flood Relief Laravel app",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Register",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/register",
          "host": ["{{base_url}}"],
          "path": ["api", "register"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('token', response.token);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/login",
          "host": ["{{base_url}}"],
          "path": ["api", "login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('token', response.token);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get User",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/user",
          "host": ["{{base_url}}"],
          "path": ["api", "user"]
        }
      }
    },
    {
      "name": "Logout",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/logout",
          "host": ["{{base_url}}"],
          "path": ["api", "logout"]
        }
      }
    }
    ,
    {
      "name": "Submit Relief Request",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            { "key": "location", "value": "12.345678, 98.765432", "type": "text" },
            { "key": "address", "value": "123 Main St", "type": "text" },
            { "key": "contact", "value": "+1234567890", "type": "text" },
            { "key": "priority", "value": "High", "type": "text" },
            { "key": "requestType", "value": "Food", "type": "text" },
            { "key": "details", "value": "Need food and water", "type": "text" },
            { "key": "coords[lat]", "value": "12.345678", "type": "text" },
            { "key": "coords[lng]", "value": "98.765432", "type": "text" },
            { "key": "photos[]", "type": "file" },
            { "key": "videos[]", "type": "file" }
          ]
        },
        "url": {
          "raw": "{{base_url}}/api/requests",
          "host": ["{{base_url}}"],
          "path": ["api", "requests"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "  const r = pm.response.json();",
              "  console.log('Created relief request', r.data.id);",
              "  pm.test('created', () => pm.expect(pm.response.code).to.equal(201));",
              "} else {",
              "  pm.test('status is 201', () => pm.expect(pm.response.code).to.equal(201));",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}

